package cherry.sqlapp.db.gen.mapper;

import cherry.sqlapp.db.gen.dto.SqltoolClause;
import cherry.sqlapp.db.gen.dto.SqltoolClauseCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface SqltoolClauseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @SelectProvider(type=SqltoolClauseSqlProvider.class, method="countByExample")
    int countByExample(SqltoolClauseCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @DeleteProvider(type=SqltoolClauseSqlProvider.class, method="deleteByExample")
    int deleteByExample(SqltoolClauseCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @Delete({
        "delete from SQLTOOL_CLAUSE",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @Insert({
        "insert into SQLTOOL_CLAUSE (DATABASE_NAME, SELECT_CLAUSE, ",
        "FROM_CLAUSE, WHERE_CLAUSE, ",
        "GROUP_BY_CLAUSE, HAVING_CLAUSE, ",
        "ORDER_BY_CLAUSE, PARAM_MAP, ",
        "UPDATED_AT, CREATED_AT, ",
        "LOCK_VERSION, DELETED_FLG)",
        "values (#{databaseName,jdbcType=VARCHAR}, #{selectClause,jdbcType=VARCHAR}, ",
        "#{fromClause,jdbcType=VARCHAR}, #{whereClause,jdbcType=VARCHAR}, ",
        "#{groupByClause,jdbcType=VARCHAR}, #{havingClause,jdbcType=VARCHAR}, ",
        "#{orderByClause,jdbcType=VARCHAR}, #{paramMap,jdbcType=VARCHAR}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, ",
        "#{lockVersion,jdbcType=INTEGER}, #{deletedFlg,jdbcType=INTEGER})"
    })
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insert(SqltoolClause record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @InsertProvider(type=SqltoolClauseSqlProvider.class, method="insertSelective")
    @Options(useGeneratedKeys=true,keyProperty="id")
    int insertSelective(SqltoolClause record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @SelectProvider(type=SqltoolClauseSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="DATABASE_NAME", property="databaseName", jdbcType=JdbcType.VARCHAR),
        @Result(column="SELECT_CLAUSE", property="selectClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="FROM_CLAUSE", property="fromClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="WHERE_CLAUSE", property="whereClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="GROUP_BY_CLAUSE", property="groupByClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="HAVING_CLAUSE", property="havingClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORDER_BY_CLAUSE", property="orderByClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="PARAM_MAP", property="paramMap", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    List<SqltoolClause> selectByExampleWithRowbounds(SqltoolClauseCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @SelectProvider(type=SqltoolClauseSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="DATABASE_NAME", property="databaseName", jdbcType=JdbcType.VARCHAR),
        @Result(column="SELECT_CLAUSE", property="selectClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="FROM_CLAUSE", property="fromClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="WHERE_CLAUSE", property="whereClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="GROUP_BY_CLAUSE", property="groupByClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="HAVING_CLAUSE", property="havingClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORDER_BY_CLAUSE", property="orderByClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="PARAM_MAP", property="paramMap", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    List<SqltoolClause> selectByExample(SqltoolClauseCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, DATABASE_NAME, SELECT_CLAUSE, FROM_CLAUSE, WHERE_CLAUSE, GROUP_BY_CLAUSE, ",
        "HAVING_CLAUSE, ORDER_BY_CLAUSE, PARAM_MAP, UPDATED_AT, CREATED_AT, LOCK_VERSION, ",
        "DELETED_FLG",
        "from SQLTOOL_CLAUSE",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="DATABASE_NAME", property="databaseName", jdbcType=JdbcType.VARCHAR),
        @Result(column="SELECT_CLAUSE", property="selectClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="FROM_CLAUSE", property="fromClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="WHERE_CLAUSE", property="whereClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="GROUP_BY_CLAUSE", property="groupByClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="HAVING_CLAUSE", property="havingClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORDER_BY_CLAUSE", property="orderByClause", jdbcType=JdbcType.VARCHAR),
        @Result(column="PARAM_MAP", property="paramMap", jdbcType=JdbcType.VARCHAR),
        @Result(column="UPDATED_AT", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="CREATED_AT", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="LOCK_VERSION", property="lockVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="DELETED_FLG", property="deletedFlg", jdbcType=JdbcType.INTEGER)
    })
    SqltoolClause selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SqltoolClauseSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SqltoolClause record, @Param("example") SqltoolClauseCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SqltoolClauseSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SqltoolClause record, @Param("example") SqltoolClauseCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SqltoolClauseSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SqltoolClause record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SQLTOOL_CLAUSE
     *
     * @mbggenerated
     */
    @Update({
        "update SQLTOOL_CLAUSE",
        "set DATABASE_NAME = #{databaseName,jdbcType=VARCHAR},",
          "SELECT_CLAUSE = #{selectClause,jdbcType=VARCHAR},",
          "FROM_CLAUSE = #{fromClause,jdbcType=VARCHAR},",
          "WHERE_CLAUSE = #{whereClause,jdbcType=VARCHAR},",
          "GROUP_BY_CLAUSE = #{groupByClause,jdbcType=VARCHAR},",
          "HAVING_CLAUSE = #{havingClause,jdbcType=VARCHAR},",
          "ORDER_BY_CLAUSE = #{orderByClause,jdbcType=VARCHAR},",
          "PARAM_MAP = #{paramMap,jdbcType=VARCHAR},",
          "UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},",
          "CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},",
          "LOCK_VERSION = #{lockVersion,jdbcType=INTEGER},",
          "DELETED_FLG = #{deletedFlg,jdbcType=INTEGER}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SqltoolClause record);
}